Media queries
Responsiveness 
    Media queries
    Grid
    Flex
    Bootstrap

***************************************************
Media queries

@media(max-width: 600px) {
    h1 {
        color: blue;
    }
}

what it means is for width <= 600px use the CSS inside @media

can also use 
@media (min-width: 600px) {
    //css code
}
 this will target all screens above 600px width

 ** can also combine
    @media (min-width: 600px) and (max-width: 900px) {
        //css for screens between 600px and 900px
    }

in this way can combine other way also, 

** @media screen (orientation:landscape) {
    /* CSS for different orientation*/
    NOT RECOMMENDED TO USE
}

** @media print (orientation:) {
    //css layout for when the screen will be printed
}


#######################################3
Retry the Project 52

######################################
FLEXBOX

<table>
    <tr>
        <td>
to create a table

but this should not be used for layout. rather use it for data

for layout, you can use display : inline-block

 also can use float to decide layout

 it's best to use FLEXBOX, GRID, BOOTSTRAP

 ##FLEXBOX
 wrap the divs inside a container
 target container and set display: flex
 it has gap: 20px

 everything in the flex container will fall in same line, irrespective
 of the default display property of the HTML tag

 eg <p> <img> are block, but they will be inline in the flex div.


 display: flex -- this will occupy entire horizontal width
 display: inline-flex -- h & w can be set

Flex keeps adding everything in one line, no matter how many

**li {
      list-style: none;
    }
    this removes bullet from li

** can create a responsive Navbar using flex and li, see index.html 9.0